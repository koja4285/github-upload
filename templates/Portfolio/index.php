<?php
/**
 * CakePHP(tm) : Rapid Development Framework (https://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org)
 * @link      https://cakephp.org CakePHP(tm) Project
 * @since     0.2.9
 * @license   https://opensource.org/licenses/mit-license.php MIT License
 * @author    Kohei Koja
 */

echo $this->Html->css('portfolio', ['block' => 'css']);
// echo $this->Html->script('home', ['block' => 'script']);
?>

<h1 class="">
    Portfolio
</h1>

<div>
    <h2>
        Group project
    </h2>
    <h3>
        PDFs, IMGs -> Text Converter
    </h3>
    <p class="paragraph">
        On Jan 29th-31st, I attended UF-organizing hackathon, SwampHacks2021. My team learned how to use
        <b>Google API</b> in <b>Java</b>. It was a great experience for me on especially collaborating with
        other peers. Check out the detail on 
        <a href="https://devpost.com/software/pdfs-imgs-text" target="_blank" rel="noopener noreferrer">devpost</a>!
    </p>
</div>

<div class="pt-5">
    <h2 class="">
        Personal project
    </h2>
    <h3>
        Eclipse Plug-in Development
    </h3>
    <div class="paragraph">
        The view on Eclipse lists all the methods and the details of them (method signatures, LOC and so on)
        in Java source code you are opening in the editor. Also, if the method has its corresponding Javadoc, 
        it verfies the correctness between Javadoc's information and method signatures.
        This project leads to publication on a national conference.
    </div>

    <h3>
        Knight's tour with SAT solver
    </h3>
    <div class="paragraph">
        This was a project in the course "Reliable Software" from my undergrad.<br>
        Knight's tour is a famous problem which searches for a sequence of moves of a knights on a chessboard such that
        the knight visits every square exactly once. There are three programs. One solves the Knight’s tour 
        problem in a brute-force way. Another one encodes the Knight’s tour problem into CNF. The other one decodes 
        the result generated by SAT solver. In this problem, I wrote programs that find “closed” knight’s tour. The 
        reason I did this is to add more constraints so that SAT solver can solve the problem within seconds.<br>
        <b>Try:</b><br>
        You can download <a href="/file/reliable_software_knight-tour.zip">zip file</a> which contains 6 files.
        <p class="code">
            1. NxN_knight-tour_cnf_encoder.c <br>
            2. NxN_knight-tour_solver_bruteforce.c <br>
            3. NxN_knight-tour_solver_warnsdorff.c <br>
            4. MxN_knight-tour_cnf_encoder.c <br>
            5. MxN_knight-tour_solver_bruteforce.c <br>
            6. cnf_decoder.c <br>
        </p>
        <i>TODO: Write usage.</i>
    </div>

    <h3>
        Java compiler compiler
    </h3>
    <div class="paragraph">
        To learn how compilers works, I designed my own very simple compiler compiler. This compiler only allows
        the syntax of variable declaration, definition, basic mathematic operations and print function.
    </div>

    <h3>
        Socket programming in C
    </h3>
    <div class="paragraph">
        This was a programming project in the course "Operating System B" from my undergrad.<br>
        This is a simple word guessing game between multiple clients. Clients connect with a server via TCP.
        Clients guess the word and compete with others. Whoever is able to guess the word correctly can get points.<br>
        <b>UPDATE (02/20/2021): </b>Now, the server picks up words from a newline-separated wordlist file.
        By default, it picks up pokemon names from "pokemon.txt". Also, clients now query 'hint'.<br>
        <b>How to play:</b><br>
        Compile: after unzipping <a href="/file/OS_B_socket_programming.zip">this file</a>, you can find 4 files in total.<br>
        <div class="code">
            1. DieWithError.c &nbsp/* Error handling function */<br>
            2. myTCPServer.c  &nbsp&nbsp/* Server's program */<br>
            3. myTCPClient.c  &nbsp&nbsp/* Client's program */<br>
            4. pokemon.txt &nbsp&nbsp&nbsp&nbsp/* Default wordlist */
        </div>
        You can generate execution files as below.<br>
        <div class="code">
            $ gcc DieWithError.c myTCPServer.c -o server<br>
            $ gcc DieWithError.c myTCPClient.c -o client
        </div>
        Server's and clients' general usage is below.
        <div class="code">
            $ ./server &ltport number&gt<br>
            $ ./client &ltserver's IP address&gt &ltserver's port number&gt
        </div>
    </div>
    
    <h3>
        iOS application in Swift
    </h3>
    <div class="paragraph">
        I learned Swift programming through the Stanford open course you can freely take on 
        <a href="https://itunes.apple.com/us/course/developing-ios-11-apps-with-swift/id1309275316" target="_blank">
            iTunesU
        </a>.
        In this course, you are assigned to create a simple concentration game (the game you choose
        mathcing pairs of cards).
    </div>
</div>